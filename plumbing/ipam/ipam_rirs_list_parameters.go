// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2020 The go-netbox Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package ipam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewIpamRirsListParams creates a new IpamRirsListParams object
// with the default values initialized.
func NewIpamRirsListParams() *IpamRirsListParams {
	var ()
	return &IpamRirsListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewIpamRirsListParamsWithTimeout creates a new IpamRirsListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewIpamRirsListParamsWithTimeout(timeout time.Duration) *IpamRirsListParams {
	var ()
	return &IpamRirsListParams{

		timeout: timeout,
	}
}

// NewIpamRirsListParamsWithContext creates a new IpamRirsListParams object
// with the default values initialized, and the ability to set a context for a request
func NewIpamRirsListParamsWithContext(ctx context.Context) *IpamRirsListParams {
	var ()
	return &IpamRirsListParams{

		Context: ctx,
	}
}

// NewIpamRirsListParamsWithHTTPClient creates a new IpamRirsListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewIpamRirsListParamsWithHTTPClient(client *http.Client) *IpamRirsListParams {
	var ()
	return &IpamRirsListParams{
		HTTPClient: client,
	}
}

/*IpamRirsListParams contains all the parameters to send to the API endpoint
for the ipam rirs list operation typically these are written to a http.Request
*/
type IpamRirsListParams struct {

	/*IDIn
	  Multiple values may be separated by commas.

	*/
	IDIn *string
	/*IsPrivate*/
	IsPrivate *string
	/*Limit
	  Number of results to return per page.

	*/
	Limit *int64
	/*Name*/
	Name *string
	/*NameIc*/
	NameIc *string
	/*NameIe*/
	NameIe *string
	/*NameIew*/
	NameIew *string
	/*NameIsw*/
	NameIsw *string
	/*Namen*/
	Namen *string
	/*NameNic*/
	NameNic *string
	/*NameNie*/
	NameNie *string
	/*NameNiew*/
	NameNiew *string
	/*NameNisw*/
	NameNisw *string
	/*Offset
	  The initial index from which to return the results.

	*/
	Offset *int64
	/*Q*/
	Q *string
	/*Slug*/
	Slug *string
	/*SlugIc*/
	SlugIc *string
	/*SlugIe*/
	SlugIe *string
	/*SlugIew*/
	SlugIew *string
	/*SlugIsw*/
	SlugIsw *string
	/*Slugn*/
	Slugn *string
	/*SlugNic*/
	SlugNic *string
	/*SlugNie*/
	SlugNie *string
	/*SlugNiew*/
	SlugNiew *string
	/*SlugNisw*/
	SlugNisw *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the ipam rirs list params
func (o *IpamRirsListParams) WithTimeout(timeout time.Duration) *IpamRirsListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the ipam rirs list params
func (o *IpamRirsListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the ipam rirs list params
func (o *IpamRirsListParams) WithContext(ctx context.Context) *IpamRirsListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the ipam rirs list params
func (o *IpamRirsListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the ipam rirs list params
func (o *IpamRirsListParams) WithHTTPClient(client *http.Client) *IpamRirsListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the ipam rirs list params
func (o *IpamRirsListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIDIn adds the iDIn to the ipam rirs list params
func (o *IpamRirsListParams) WithIDIn(iDIn *string) *IpamRirsListParams {
	o.SetIDIn(iDIn)
	return o
}

// SetIDIn adds the idIn to the ipam rirs list params
func (o *IpamRirsListParams) SetIDIn(iDIn *string) {
	o.IDIn = iDIn
}

// WithIsPrivate adds the isPrivate to the ipam rirs list params
func (o *IpamRirsListParams) WithIsPrivate(isPrivate *string) *IpamRirsListParams {
	o.SetIsPrivate(isPrivate)
	return o
}

// SetIsPrivate adds the isPrivate to the ipam rirs list params
func (o *IpamRirsListParams) SetIsPrivate(isPrivate *string) {
	o.IsPrivate = isPrivate
}

// WithLimit adds the limit to the ipam rirs list params
func (o *IpamRirsListParams) WithLimit(limit *int64) *IpamRirsListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the ipam rirs list params
func (o *IpamRirsListParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithName adds the name to the ipam rirs list params
func (o *IpamRirsListParams) WithName(name *string) *IpamRirsListParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the ipam rirs list params
func (o *IpamRirsListParams) SetName(name *string) {
	o.Name = name
}

// WithNameIc adds the nameIc to the ipam rirs list params
func (o *IpamRirsListParams) WithNameIc(nameIc *string) *IpamRirsListParams {
	o.SetNameIc(nameIc)
	return o
}

// SetNameIc adds the nameIc to the ipam rirs list params
func (o *IpamRirsListParams) SetNameIc(nameIc *string) {
	o.NameIc = nameIc
}

// WithNameIe adds the nameIe to the ipam rirs list params
func (o *IpamRirsListParams) WithNameIe(nameIe *string) *IpamRirsListParams {
	o.SetNameIe(nameIe)
	return o
}

// SetNameIe adds the nameIe to the ipam rirs list params
func (o *IpamRirsListParams) SetNameIe(nameIe *string) {
	o.NameIe = nameIe
}

// WithNameIew adds the nameIew to the ipam rirs list params
func (o *IpamRirsListParams) WithNameIew(nameIew *string) *IpamRirsListParams {
	o.SetNameIew(nameIew)
	return o
}

// SetNameIew adds the nameIew to the ipam rirs list params
func (o *IpamRirsListParams) SetNameIew(nameIew *string) {
	o.NameIew = nameIew
}

// WithNameIsw adds the nameIsw to the ipam rirs list params
func (o *IpamRirsListParams) WithNameIsw(nameIsw *string) *IpamRirsListParams {
	o.SetNameIsw(nameIsw)
	return o
}

// SetNameIsw adds the nameIsw to the ipam rirs list params
func (o *IpamRirsListParams) SetNameIsw(nameIsw *string) {
	o.NameIsw = nameIsw
}

// WithNamen adds the namen to the ipam rirs list params
func (o *IpamRirsListParams) WithNamen(namen *string) *IpamRirsListParams {
	o.SetNamen(namen)
	return o
}

// SetNamen adds the nameN to the ipam rirs list params
func (o *IpamRirsListParams) SetNamen(namen *string) {
	o.Namen = namen
}

// WithNameNic adds the nameNic to the ipam rirs list params
func (o *IpamRirsListParams) WithNameNic(nameNic *string) *IpamRirsListParams {
	o.SetNameNic(nameNic)
	return o
}

// SetNameNic adds the nameNic to the ipam rirs list params
func (o *IpamRirsListParams) SetNameNic(nameNic *string) {
	o.NameNic = nameNic
}

// WithNameNie adds the nameNie to the ipam rirs list params
func (o *IpamRirsListParams) WithNameNie(nameNie *string) *IpamRirsListParams {
	o.SetNameNie(nameNie)
	return o
}

// SetNameNie adds the nameNie to the ipam rirs list params
func (o *IpamRirsListParams) SetNameNie(nameNie *string) {
	o.NameNie = nameNie
}

// WithNameNiew adds the nameNiew to the ipam rirs list params
func (o *IpamRirsListParams) WithNameNiew(nameNiew *string) *IpamRirsListParams {
	o.SetNameNiew(nameNiew)
	return o
}

// SetNameNiew adds the nameNiew to the ipam rirs list params
func (o *IpamRirsListParams) SetNameNiew(nameNiew *string) {
	o.NameNiew = nameNiew
}

// WithNameNisw adds the nameNisw to the ipam rirs list params
func (o *IpamRirsListParams) WithNameNisw(nameNisw *string) *IpamRirsListParams {
	o.SetNameNisw(nameNisw)
	return o
}

// SetNameNisw adds the nameNisw to the ipam rirs list params
func (o *IpamRirsListParams) SetNameNisw(nameNisw *string) {
	o.NameNisw = nameNisw
}

// WithOffset adds the offset to the ipam rirs list params
func (o *IpamRirsListParams) WithOffset(offset *int64) *IpamRirsListParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the ipam rirs list params
func (o *IpamRirsListParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithQ adds the q to the ipam rirs list params
func (o *IpamRirsListParams) WithQ(q *string) *IpamRirsListParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the ipam rirs list params
func (o *IpamRirsListParams) SetQ(q *string) {
	o.Q = q
}

// WithSlug adds the slug to the ipam rirs list params
func (o *IpamRirsListParams) WithSlug(slug *string) *IpamRirsListParams {
	o.SetSlug(slug)
	return o
}

// SetSlug adds the slug to the ipam rirs list params
func (o *IpamRirsListParams) SetSlug(slug *string) {
	o.Slug = slug
}

// WithSlugIc adds the slugIc to the ipam rirs list params
func (o *IpamRirsListParams) WithSlugIc(slugIc *string) *IpamRirsListParams {
	o.SetSlugIc(slugIc)
	return o
}

// SetSlugIc adds the slugIc to the ipam rirs list params
func (o *IpamRirsListParams) SetSlugIc(slugIc *string) {
	o.SlugIc = slugIc
}

// WithSlugIe adds the slugIe to the ipam rirs list params
func (o *IpamRirsListParams) WithSlugIe(slugIe *string) *IpamRirsListParams {
	o.SetSlugIe(slugIe)
	return o
}

// SetSlugIe adds the slugIe to the ipam rirs list params
func (o *IpamRirsListParams) SetSlugIe(slugIe *string) {
	o.SlugIe = slugIe
}

// WithSlugIew adds the slugIew to the ipam rirs list params
func (o *IpamRirsListParams) WithSlugIew(slugIew *string) *IpamRirsListParams {
	o.SetSlugIew(slugIew)
	return o
}

// SetSlugIew adds the slugIew to the ipam rirs list params
func (o *IpamRirsListParams) SetSlugIew(slugIew *string) {
	o.SlugIew = slugIew
}

// WithSlugIsw adds the slugIsw to the ipam rirs list params
func (o *IpamRirsListParams) WithSlugIsw(slugIsw *string) *IpamRirsListParams {
	o.SetSlugIsw(slugIsw)
	return o
}

// SetSlugIsw adds the slugIsw to the ipam rirs list params
func (o *IpamRirsListParams) SetSlugIsw(slugIsw *string) {
	o.SlugIsw = slugIsw
}

// WithSlugn adds the slugn to the ipam rirs list params
func (o *IpamRirsListParams) WithSlugn(slugn *string) *IpamRirsListParams {
	o.SetSlugn(slugn)
	return o
}

// SetSlugn adds the slugN to the ipam rirs list params
func (o *IpamRirsListParams) SetSlugn(slugn *string) {
	o.Slugn = slugn
}

// WithSlugNic adds the slugNic to the ipam rirs list params
func (o *IpamRirsListParams) WithSlugNic(slugNic *string) *IpamRirsListParams {
	o.SetSlugNic(slugNic)
	return o
}

// SetSlugNic adds the slugNic to the ipam rirs list params
func (o *IpamRirsListParams) SetSlugNic(slugNic *string) {
	o.SlugNic = slugNic
}

// WithSlugNie adds the slugNie to the ipam rirs list params
func (o *IpamRirsListParams) WithSlugNie(slugNie *string) *IpamRirsListParams {
	o.SetSlugNie(slugNie)
	return o
}

// SetSlugNie adds the slugNie to the ipam rirs list params
func (o *IpamRirsListParams) SetSlugNie(slugNie *string) {
	o.SlugNie = slugNie
}

// WithSlugNiew adds the slugNiew to the ipam rirs list params
func (o *IpamRirsListParams) WithSlugNiew(slugNiew *string) *IpamRirsListParams {
	o.SetSlugNiew(slugNiew)
	return o
}

// SetSlugNiew adds the slugNiew to the ipam rirs list params
func (o *IpamRirsListParams) SetSlugNiew(slugNiew *string) {
	o.SlugNiew = slugNiew
}

// WithSlugNisw adds the slugNisw to the ipam rirs list params
func (o *IpamRirsListParams) WithSlugNisw(slugNisw *string) *IpamRirsListParams {
	o.SetSlugNisw(slugNisw)
	return o
}

// SetSlugNisw adds the slugNisw to the ipam rirs list params
func (o *IpamRirsListParams) SetSlugNisw(slugNisw *string) {
	o.SlugNisw = slugNisw
}

// WriteToRequest writes these params to a swagger request
func (o *IpamRirsListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IDIn != nil {

		// query param id__in
		var qrIDIn string
		if o.IDIn != nil {
			qrIDIn = *o.IDIn
		}
		qIDIn := qrIDIn
		if qIDIn != "" {
			if err := r.SetQueryParam("id__in", qIDIn); err != nil {
				return err
			}
		}

	}

	if o.IsPrivate != nil {

		// query param is_private
		var qrIsPrivate string
		if o.IsPrivate != nil {
			qrIsPrivate = *o.IsPrivate
		}
		qIsPrivate := qrIsPrivate
		if qIsPrivate != "" {
			if err := r.SetQueryParam("is_private", qIsPrivate); err != nil {
				return err
			}
		}

	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.NameIc != nil {

		// query param name__ic
		var qrNameIc string
		if o.NameIc != nil {
			qrNameIc = *o.NameIc
		}
		qNameIc := qrNameIc
		if qNameIc != "" {
			if err := r.SetQueryParam("name__ic", qNameIc); err != nil {
				return err
			}
		}

	}

	if o.NameIe != nil {

		// query param name__ie
		var qrNameIe string
		if o.NameIe != nil {
			qrNameIe = *o.NameIe
		}
		qNameIe := qrNameIe
		if qNameIe != "" {
			if err := r.SetQueryParam("name__ie", qNameIe); err != nil {
				return err
			}
		}

	}

	if o.NameIew != nil {

		// query param name__iew
		var qrNameIew string
		if o.NameIew != nil {
			qrNameIew = *o.NameIew
		}
		qNameIew := qrNameIew
		if qNameIew != "" {
			if err := r.SetQueryParam("name__iew", qNameIew); err != nil {
				return err
			}
		}

	}

	if o.NameIsw != nil {

		// query param name__isw
		var qrNameIsw string
		if o.NameIsw != nil {
			qrNameIsw = *o.NameIsw
		}
		qNameIsw := qrNameIsw
		if qNameIsw != "" {
			if err := r.SetQueryParam("name__isw", qNameIsw); err != nil {
				return err
			}
		}

	}

	if o.Namen != nil {

		// query param name__n
		var qrNamen string
		if o.Namen != nil {
			qrNamen = *o.Namen
		}
		qNamen := qrNamen
		if qNamen != "" {
			if err := r.SetQueryParam("name__n", qNamen); err != nil {
				return err
			}
		}

	}

	if o.NameNic != nil {

		// query param name__nic
		var qrNameNic string
		if o.NameNic != nil {
			qrNameNic = *o.NameNic
		}
		qNameNic := qrNameNic
		if qNameNic != "" {
			if err := r.SetQueryParam("name__nic", qNameNic); err != nil {
				return err
			}
		}

	}

	if o.NameNie != nil {

		// query param name__nie
		var qrNameNie string
		if o.NameNie != nil {
			qrNameNie = *o.NameNie
		}
		qNameNie := qrNameNie
		if qNameNie != "" {
			if err := r.SetQueryParam("name__nie", qNameNie); err != nil {
				return err
			}
		}

	}

	if o.NameNiew != nil {

		// query param name__niew
		var qrNameNiew string
		if o.NameNiew != nil {
			qrNameNiew = *o.NameNiew
		}
		qNameNiew := qrNameNiew
		if qNameNiew != "" {
			if err := r.SetQueryParam("name__niew", qNameNiew); err != nil {
				return err
			}
		}

	}

	if o.NameNisw != nil {

		// query param name__nisw
		var qrNameNisw string
		if o.NameNisw != nil {
			qrNameNisw = *o.NameNisw
		}
		qNameNisw := qrNameNisw
		if qNameNisw != "" {
			if err := r.SetQueryParam("name__nisw", qNameNisw); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	if o.Q != nil {

		// query param q
		var qrQ string
		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {
			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}

	}

	if o.Slug != nil {

		// query param slug
		var qrSlug string
		if o.Slug != nil {
			qrSlug = *o.Slug
		}
		qSlug := qrSlug
		if qSlug != "" {
			if err := r.SetQueryParam("slug", qSlug); err != nil {
				return err
			}
		}

	}

	if o.SlugIc != nil {

		// query param slug__ic
		var qrSlugIc string
		if o.SlugIc != nil {
			qrSlugIc = *o.SlugIc
		}
		qSlugIc := qrSlugIc
		if qSlugIc != "" {
			if err := r.SetQueryParam("slug__ic", qSlugIc); err != nil {
				return err
			}
		}

	}

	if o.SlugIe != nil {

		// query param slug__ie
		var qrSlugIe string
		if o.SlugIe != nil {
			qrSlugIe = *o.SlugIe
		}
		qSlugIe := qrSlugIe
		if qSlugIe != "" {
			if err := r.SetQueryParam("slug__ie", qSlugIe); err != nil {
				return err
			}
		}

	}

	if o.SlugIew != nil {

		// query param slug__iew
		var qrSlugIew string
		if o.SlugIew != nil {
			qrSlugIew = *o.SlugIew
		}
		qSlugIew := qrSlugIew
		if qSlugIew != "" {
			if err := r.SetQueryParam("slug__iew", qSlugIew); err != nil {
				return err
			}
		}

	}

	if o.SlugIsw != nil {

		// query param slug__isw
		var qrSlugIsw string
		if o.SlugIsw != nil {
			qrSlugIsw = *o.SlugIsw
		}
		qSlugIsw := qrSlugIsw
		if qSlugIsw != "" {
			if err := r.SetQueryParam("slug__isw", qSlugIsw); err != nil {
				return err
			}
		}

	}

	if o.Slugn != nil {

		// query param slug__n
		var qrSlugn string
		if o.Slugn != nil {
			qrSlugn = *o.Slugn
		}
		qSlugn := qrSlugn
		if qSlugn != "" {
			if err := r.SetQueryParam("slug__n", qSlugn); err != nil {
				return err
			}
		}

	}

	if o.SlugNic != nil {

		// query param slug__nic
		var qrSlugNic string
		if o.SlugNic != nil {
			qrSlugNic = *o.SlugNic
		}
		qSlugNic := qrSlugNic
		if qSlugNic != "" {
			if err := r.SetQueryParam("slug__nic", qSlugNic); err != nil {
				return err
			}
		}

	}

	if o.SlugNie != nil {

		// query param slug__nie
		var qrSlugNie string
		if o.SlugNie != nil {
			qrSlugNie = *o.SlugNie
		}
		qSlugNie := qrSlugNie
		if qSlugNie != "" {
			if err := r.SetQueryParam("slug__nie", qSlugNie); err != nil {
				return err
			}
		}

	}

	if o.SlugNiew != nil {

		// query param slug__niew
		var qrSlugNiew string
		if o.SlugNiew != nil {
			qrSlugNiew = *o.SlugNiew
		}
		qSlugNiew := qrSlugNiew
		if qSlugNiew != "" {
			if err := r.SetQueryParam("slug__niew", qSlugNiew); err != nil {
				return err
			}
		}

	}

	if o.SlugNisw != nil {

		// query param slug__nisw
		var qrSlugNisw string
		if o.SlugNisw != nil {
			qrSlugNisw = *o.SlugNisw
		}
		qSlugNisw := qrSlugNisw
		if qSlugNisw != "" {
			if err := r.SetQueryParam("slug__nisw", qSlugNisw); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
